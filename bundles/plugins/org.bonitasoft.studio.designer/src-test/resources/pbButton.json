{"designerVersion":"1.0.0-SNAPSHOT","id":"pbButton","name":"Button","lastUpdate":1426684383054,"template":"<div class=\"text-{{ parameters.alignment }}\">\n    <button\n        ng-class=\"'btn btn-' + parameters.buttonStyle\"\n        ng-click=\"ctrl.action()\"\n        ng-disabled=\"parameters.isDisabled\">{{ parameters.label }}</button>\n</div>\n","icon":"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 50 20'><g><path fill='#A8A8AF' d='M47,15.2c0,0.7-1.7,1.8-1.7,1.8S4.8,17,3.7,17c-1.6,0-3.6-1.9-3.6-1.9s0.7,4.8,4,5c2.4,0.1,42.4,0,42.4,0 s3.5-0.2,3.5-3.6c0-1.3,0.1-11.5,0.1-12.4c-0.1-2-4-4-4-4L47,1.8C47,1.8,47,14.5,47,15.2z'/><path fill='#424251' d='M3.9,1h40.3C45.7,1,47,2.2,47,3.6v10.8c0,1.4-1.3,2.6-2.9,2.6H3.9C2.3,17,1,15.8,1,14.4V3.6 C1,2.2,2.3,1,3.9,1z M3,0C1.3,0,0,1.3,0,3v12c0,1.7,1.3,3,3,3h42c1.7,0,3-1.3,3-3V3c0-1.7-1.3-3-3-3H3z'/></g></svg>","controller":"function PbButtonCtrl ($scope, $http, $timeout) {\n\n  'use strict';\n\n  this.action = function action () {\n    if ($scope.parameters.toCopy) {\n      copy();\n    }\n\n    if ($scope.parameters.action === 'Remove from collection') {\n      removeFromCollection();\n    } else if ($scope.parameters.action === 'Add to collection') {\n      addToCollection();\n    } else if ($scope.parameters.action === 'Submit task') {\n      doRequestDelayed('POST', '/bonita/API/bpm/tasks/' + getTaskId() + '/execute');\n    } else if ($scope.parameters.action !== 'None' && $scope.parameters.destUrl) {\n      doRequestDelayed($scope.parameters.action, $scope.parameters.destUrl);\n    }\n  };\n\n  function removeFromCollection () {\n    if ($scope.parameters.collectionToModify) {\n      if (!Array.isArray($scope.parameters.collectionToModify)) {\n        throw 'Collection parameter for widget button should be an array, but was ' + $scope.parameters.collectionToModify;\n      }\n\n      if ($scope.parameters.collectionPosition === 'First') {\n        $scope.parameters.collectionToModify.shift();\n      } else {\n        $scope.parameters.collectionToModify.pop();\n      }\n    }\n  }\n\n  function addToCollection () {\n    if (!$scope.parameters.collectionToModify) {\n      $scope.parameters.collectionToModify = [];\n    }\n    if (!Array.isArray($scope.parameters.collectionToModify)) {\n      throw 'Collection parameter for widget button should be an array, but was ' + $scope.parameters.collectionToModify;\n    }\n\n    if ($scope.parameters.collectionPosition === 'First') {\n      $scope.parameters.collectionToModify.unshift($scope.parameters.valueToAdd);\n    } else {\n      $scope.parameters.collectionToModify.push($scope.parameters.valueToAdd);\n    }\n  }\n\n  // we delayed the doRequest to ensure dataToSend is updated\n  // this usefull when copy() update the dataToSend object.\n  function doRequestDelayed (method, url) {\n    $timeout(function() {\n      doRequest(method, url);\n    }, false);\n  }\n\n  /**\n   * Execute a get/post request to an URL\n   * It also bind custom data from success|error to a data\n   * @return {void}\n   */\n  function doRequest (method, url) {\n    var req = {\n      method: method,\n      url: url,\n      data: angular.copy($scope.parameters.dataToSend)\n    };\n\n    $http(req)\n      .success(function(data) {\n        $scope.parameters.dataFromSuccess = data;\n      })\n      .error(function(data) {\n        $scope.parameters.dataFromError = data;\n      });\n  }\n\n  function getTaskId () {\n    // return last path info i.e. /some/url/{taskId}\n    return window.location.href.match(/([^\\/]*)\\/*$/)[1];\n  }\n\n  /**\n   * Copy a data\n   * @return {void}\n   */\n  function copy () {\n    $scope.parameters.model = $scope.parameters.toCopy;\n  }\n}\n","custom":false,"parameters":[{"label":"Label","name":"label","type":"text","defaultValue":"Search"},{"label":"Alignment","name":"alignment","type":"choice","defaultValue":"left","choiceValues":["left","center","right"]},{"label":"Button style","name":"buttonStyle","type":"choice","defaultValue":"default","choiceValues":["default","primary","success","info","warning","danger"]},{"label":"Model to copy","name":"toCopy","type":"text"},{"label":"Model to init","name":"model","type":"text"},{"label":"Action","name":"action","type":"choice","defaultValue":"None","choiceValues":["None","POST","PUT","Submit task","Add to collection","Remove from collection"]},{"label":"URL to call","name":"destUrl","caption":"You can send data to an url when you click on the button","showFor":"parameters.action.value === 'POST' || parameters.action.value === 'PUT'","type":"text"},{"label":"Data to send on click","name":"dataToSend","showFor":"parameters.action.value === 'POST' || parameters.action.value === 'PUT' || parameters.action.value === 'Submit task'","type":"text"},{"label":"Bind data from success calls","name":"dataFromSuccess","caption":"If the request returns a value it will be bind to this data","showFor":"parameters.action.value === 'POST' || parameters.action.value === 'PUT' || parameters.action.value === 'Submit task'","type":"text"},{"label":"Bind data from error calls","name":"dataFromError","caption":"If the request returns a value it will be bind to this data","showFor":"parameters.action.value === 'POST' || parameters.action.value === 'PUT' || parameters.action.value === 'Submit task'","type":"text"},{"label":"Collection","name":"collectionToModify","showFor":"parameters.action.value === 'Remove from collection' || parameters.action.value === 'Add to collection'","type":"collection"},{"label":"Remove","name":"collectionPosition","showFor":"parameters.action.value === 'Remove from collection'","type":"choice","defaultValue":"Last","choiceValues":["First","Last"]},{"label":"Add","name":"collectionPosition","showFor":"parameters.action.value === 'Add to collection'","type":"choice","defaultValue":"Last","choiceValues":["First","Last"]},{"label":"Value to add","name":"valueToAdd","caption":"Leave empty to add an empty value","showFor":"parameters.action.value === 'Add to collection'","type":"text"}]}
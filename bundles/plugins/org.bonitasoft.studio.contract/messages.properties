contractSectionDescription=Define a contract for this step or pool instantiation.
name=Name
type=Type
mandatory=Mandatory
multiple=Multiple
add=Add
addChild=Add child
remove=Remove
savedInto=Save to data
description=Description
automaticMappingTooltip=Use \"Ctrl + Space\" to automatically save this input in an existing data.
constraints=Constraints
none=None
addConstraint=Add...
editConstraint=Edit...
inputSuffix=Input
duplicatedInputNames=Duplicated input name: {0}
duplicatedConstraintNames=Duplicated constraint name: {0}
contractInputs=Contract Inputs
inputTabLabel=Inputs
constraintsTabLabel=Constraints
contractInputTypeLabel=Contract Input
removeInputConfirmationMessage=Are you sure you want to remove following input ?\nIf this input is COMPLEX it will remove all children.\nIf this input is a single reference of a constraint. This constraint will be removed.
removeInputConfirmationTitle=Remove contract input ?
removeConstraintConfirmationTitle=Remove contract constraint(s) ?
removeConstraintConfirmationMessage=Are you sure you want to remove following constraint(s) ?
returnType=Return type
up=Up
down=Down
expression=Expression
errorMessage=Error message
noInputReferencedInConstraintExpression=No input is referenced in the expression of constraint: {0}
unknownInputReferencedInConstraintExpression=Unknown input \"{0}\" is referenced in the expression of {1}
constraintEditorDescription=Type the constraint using Groovy scripting.
contentAssistHint=Use \"Ctrl + Space\" to trigger content assist.
addContentToConstraint=Add content to constraint {0}
editContentToConstraint=Edit content to constraint {0}
emptyExpressionContent=Empty expression content
noContractInputReferencedInExpression=No contract input is referenced in the expression
nullable=Nullable
removeInputErrorTitle=Remove failed
removeInputErrorMsg=An error occurred when removing contract input.
severalCompilationErrors={0} compilation errors found.
SelectBusinessDataWizardPageTitle=Select business data
selectBusinessDataWizardPageDescription=Select business variable from which contract input will be generated.
generate=Add from data...
contractInputGenerationTitle=Add Contract input 
rootContractInputName=Input name
selectFieldToGenerateTitle=Select {0} attributes to add to contract
selectFieldToGenerateDescription=Choose the fields you want to reuse in your contract.
inputOfType=of type COMPLEX
inputType=Input type
attributetype=Attribute type
atLeastOneAttributeShouldBeSelectedError=At least one attribute should be checked.
attributeName = Attribute name
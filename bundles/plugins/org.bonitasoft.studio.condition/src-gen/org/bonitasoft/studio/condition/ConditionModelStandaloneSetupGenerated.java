/*
 * generated by Xtext
 */
package org.bonitasoft.studio.condition;

import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.ISetup;

import com.google.inject.Guice;
import com.google.inject.Injector;

/**
 * Generated from StandaloneSetup.xpt!
 */
@SuppressWarnings("all")
public class ConditionModelStandaloneSetupGenerated implements ISetup {

    public Injector createInjectorAndDoEMFRegistration() {
        org.eclipse.xtext.common.TerminalsStandaloneSetup.doSetup();

        Injector injector = createInjector();
        register(injector);
        return injector;
    }

    public Injector createInjector() {
        return Guice.createInjector(new org.bonitasoft.studio.condition.ConditionModelRuntimeModule());
    }

    public void register(Injector injector) {
        if (!EPackage.Registry.INSTANCE.containsKey("http://www.bonitasoft.org/studio/condition/ConditionModel")) {
            EPackage.Registry.INSTANCE.put("http://www.bonitasoft.org/studio/condition/ConditionModel",
                    org.bonitasoft.studio.condition.conditionModel.ConditionModelPackage.eINSTANCE);
        }
        org.eclipse.xtext.resource.IResourceFactory resourceFactory = injector
                .getInstance(org.eclipse.xtext.resource.IResourceFactory.class);
        org.eclipse.xtext.resource.IResourceServiceProvider serviceProvider = injector
                .getInstance(org.eclipse.xtext.resource.IResourceServiceProvider.class);
        Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().put("cmodel", resourceFactory);
        org.eclipse.xtext.resource.IResourceServiceProvider.Registry.INSTANCE.getExtensionToFactoryMap().put("cmodel",
                serviceProvider);
    }
}

/*
 * Copyright (c) 2007, 2009 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Dmitry Stadnik (Borland) - initial API and implementation
 */

«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»

«EXTENSION xpt::diagram::Utils»

«DEFINE className FOR gmfgen::GenDiagram»DiagramPreferenceInitializer«ENDDEFINE»

«DEFINE qualifiedClassName FOR gmfgen::GenDiagram»«preferencesPackageName».«EXPAND className»«ENDDEFINE»

«DEFINE PreferenceInitializer FOR gmfgen::GenDiagram-»
«EXPAND xpt::Common::copyright FOR editorGen-»
package «preferencesPackageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className» extends org.eclipse.core.runtime.preferences.AbstractPreferenceInitializer {

	«EXPAND xpt::Common::generatedMemberComment»
	public void initializeDefaultPreferences() {
		org.eclipse.jface.preference.IPreferenceStore store = getPreferenceStore();
«IF preferences = null-»
		«EXPAND initDefaults('store') FOREACH allPreferencePages(self)»
«ELSE»«REM»default values for predefined pages will be set manually«ENDREM»
		«EXPAND initDefaults('store') FOREACH (allPreferencePages(self))[gmfgen::GenCustomPreferencePage]»
		«EXPAND initDefaults('store') FOR preferences-»
«ENDIF-»
		store.setDefault(org.eclipse.gmf.runtime.diagram.ui.internal.properties.WorkspaceViewerProperties.PREF_USE_LANDSCAPE,true) ;
		store.setDefault(org.eclipse.gmf.runtime.diagram.ui.internal.properties.WorkspaceViewerProperties.PREF_USE_PORTRAIT,false) ;
		store.setDefault(org.bonitasoft.studio.common.preferences.CommonDiagramPreferencesConstants.DEFAULT_OUTLINE_TYPE, org.bonitasoft.studio.common.preferences.CommonDiagramPreferencesConstants.OVERVIEW_OUTLINE_TYPE) ;

		store.setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_RULER_UNITS, org.eclipse.gef.rulers.RulerProvider.UNIT_CENTIMETERS);
		store.setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_SHOW_GRID, false);
		store.setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_SNAP_TO_GRID, true);
		store.setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_SNAP_TO_GEOMETRY, true);
		store.setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_GRID_SPACING, 0.5);
	
	}

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.jface.preference.IPreferenceStore getPreferenceStore() {
		return «editorGen.plugin.getActivatorQualifiedClassName()».getInstance().getPreferenceStore();
	}
} 
«ENDDEFINE»

«DEFINE initDefaults(storeVar : String) FOR gmfgen::GenPreferencePage»«ERROR 'Abstract define for ' + self.repr()»«ENDDEFINE»

«DEFINE initDefaults(storeVar : String) FOR gmfgen::GenStandardPreferencePage-»
«EXPAND impl::preferences::StandardPage::call_initDefaults(storeVar)»
«ENDDEFINE»

«DEFINE initDefaults(storeVar : String) FOR gmfgen::GenCustomPreferencePage-»
«EXPAND impl::preferences::CustomPage::call_initDefaults(storeVar)»
«ENDDEFINE»

«DEFINE initDefaults(storeVar : String) FOR gmfgen::GenDiagramPreferences»
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_SHOW_CONNECTION_HANDLES, «showConnectionHandles»);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_SHOW_POPUP_BARS, «showPopupBars»);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_ENABLE_ANIMATED_LAYOUT, «enableAnimatedLayout»);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_ENABLE_ANIMATED_ZOOM, «enableAnimatedZoom»);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_ENABLE_ANTIALIAS, «enableAntiAlias»);
	«EXPAND initDefaultFont(storeVar, 'PREF_DEFAULT_FONT') FOR defaultFont-»
	«EXPAND initDefaultColor(storeVar, 'PREF_FONT_COLOR') FOR fontColor-»
	«EXPAND initDefaultColor(storeVar, 'PREF_FILL_COLOR') FOR fillColor-»
	«EXPAND initDefaultColor(storeVar, 'PREF_LINE_COLOR') FOR lineColor-»
	«EXPAND initDefaultColor(storeVar, 'PREF_NOTE_FILL_COLOR') FOR noteFillColor-»
	«EXPAND initDefaultColor(storeVar, 'PREF_NOTE_LINE_COLOR') FOR noteLineColor-»
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_LINE_STYLE, org.eclipse.gmf.runtime.notation.Routing.RECTILINEAR);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_SHOW_RULERS, «showRulers»);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_RULER_UNITS, org.eclipse.gef.rulers.RulerProvider.UNIT_«rulerUnits»);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_SHOW_GRID, «showGrid»);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_SNAP_TO_GRID, true);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_SNAP_TO_GEOMETRY, true);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_GRID_SPACING, 0.5);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.IPreferenceConstants.PREF_ENABLE_ANTIALIAS, true);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_PROMPT_ON_DEL_FROM_MODEL, «promptOnDelFromModel»);
	«storeVar».setDefault(org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.PREF_PROMPT_ON_DEL_FROM_DIAGRAM, «promptOnDelFromDiagram»);
«ENDDEFINE»

«DEFINE initDefaultColor(storeVar : String, prefName : String) FOR gmfgen::GenColor»
	org.eclipse.jface.preference.PreferenceConverter.setDefault(«storeVar»,
		org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.«prefName», «EXPAND rgb»);
«ENDDEFINE»

«DEFINE initDefaultFont(storeVar : String, prefName : String) FOR gmfgen::GenFont»
	org.eclipse.jface.preference.PreferenceConverter.setDefault(«storeVar»,
		org.eclipse.gmf.runtime.diagram.ui.preferences.IPreferenceConstants.«prefName», «EXPAND fontData»);
«ENDDEFINE»

«DEFINE rgb FOR gmfgen::GenColor»
	«ERROR 'Unknown colour: ' + self.repr()»
«ENDDEFINE»

«DEFINE rgb FOR gmfgen::GenConstantColor»
	org.eclipse.gmf.runtime.diagram.ui.figures.DiagramColorConstants.«name».getRGB()
«ENDDEFINE»

«DEFINE rgb FOR gmfgen::GenRGBColor»
	new org.eclipse.swt.graphics.RGB(«red», «green», «blue»)
«ENDDEFINE»

«DEFINE fontData FOR gmfgen::GenFont»
	«ERROR 'Unknown font: ' + self.repr()»
«ENDDEFINE»

«DEFINE fontData FOR gmfgen::GenCustomFont»
	new org.eclipse.swt.graphics.FontData("«name»", «height», org.eclipse.swt.SWT.«style»)
«ENDDEFINE»

«DEFINE fontData FOR gmfgen::GenStandardFont»
	org.eclipse.jface.resource.JFaceResources.get«name»Font().getFontData()
«ENDDEFINE»

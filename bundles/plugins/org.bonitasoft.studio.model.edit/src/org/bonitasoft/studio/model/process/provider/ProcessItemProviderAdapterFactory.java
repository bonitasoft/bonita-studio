/**
 * Copyright (C) 2009-2015 BonitaSoft S.A.
 * BonitaSoft, 32 rue Gustave Eiffel - 38000 Grenoble
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2.0 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.bonitasoft.studio.model.process.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.bonitasoft.studio.model.process.util.ProcessAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ProcessItemProviderAdapterFactory extends ProcessAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ProcessItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Activity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActivityItemProvider activityItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Activity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActivityAdapter() {
		if (activityItemProvider == null) {
			activityItemProvider = new ActivityItemProvider(this);
		}

		return activityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Actor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActorItemProvider actorItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Actor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActorAdapter() {
		if (actorItemProvider == null) {
			actorItemProvider = new ActorItemProvider(this);
		}

		return actorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ActorFilter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActorFilterItemProvider actorFilterItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ActorFilter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActorFilterAdapter() {
		if (actorFilterItemProvider == null) {
			actorFilterItemProvider = new ActorFilterItemProvider(this);
		}

		return actorFilterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ANDGateway} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ANDGatewayItemProvider andGatewayItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ANDGateway}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createANDGatewayAdapter() {
		if (andGatewayItemProvider == null) {
			andGatewayItemProvider = new ANDGatewayItemProvider(this);
		}

		return andGatewayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Association} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssociationItemProvider associationItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Association}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssociationAdapter() {
		if (associationItemProvider == null) {
			associationItemProvider = new AssociationItemProvider(this);
		}

		return associationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.BooleanType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanTypeItemProvider booleanTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.BooleanType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanTypeAdapter() {
		if (booleanTypeItemProvider == null) {
			booleanTypeItemProvider = new BooleanTypeItemProvider(this);
		}

		return booleanTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.BoundaryEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundaryEventItemProvider boundaryEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.BoundaryEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundaryEventAdapter() {
		if (boundaryEventItemProvider == null) {
			boundaryEventItemProvider = new BoundaryEventItemProvider(this);
		}

		return boundaryEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.BoundaryMessageEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundaryMessageEventItemProvider boundaryMessageEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.BoundaryMessageEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundaryMessageEventAdapter() {
		if (boundaryMessageEventItemProvider == null) {
			boundaryMessageEventItemProvider = new BoundaryMessageEventItemProvider(this);
		}

		return boundaryMessageEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.BoundarySignalEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundarySignalEventItemProvider boundarySignalEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.BoundarySignalEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundarySignalEventAdapter() {
		if (boundarySignalEventItemProvider == null) {
			boundarySignalEventItemProvider = new BoundarySignalEventItemProvider(this);
		}

		return boundarySignalEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.BoundaryTimerEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundaryTimerEventItemProvider boundaryTimerEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.BoundaryTimerEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundaryTimerEventAdapter() {
		if (boundaryTimerEventItemProvider == null) {
			boundaryTimerEventItemProvider = new BoundaryTimerEventItemProvider(this);
		}

		return boundaryTimerEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.BusinessObjectData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessObjectDataItemProvider businessObjectDataItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.BusinessObjectData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessObjectDataAdapter() {
		if (businessObjectDataItemProvider == null) {
			businessObjectDataItemProvider = new BusinessObjectDataItemProvider(this);
		}

		return businessObjectDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.BusinessObjectType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessObjectTypeItemProvider businessObjectTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.BusinessObjectType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessObjectTypeAdapter() {
		if (businessObjectTypeItemProvider == null) {
			businessObjectTypeItemProvider = new BusinessObjectTypeItemProvider(this);
		}

		return businessObjectTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.CallActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CallActivityItemProvider callActivityItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.CallActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCallActivityAdapter() {
		if (callActivityItemProvider == null) {
			callActivityItemProvider = new CallActivityItemProvider(this);
		}

		return callActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.CatchLinkEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CatchLinkEventItemProvider catchLinkEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.CatchLinkEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCatchLinkEventAdapter() {
		if (catchLinkEventItemProvider == null) {
			catchLinkEventItemProvider = new CatchLinkEventItemProvider(this);
		}

		return catchLinkEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ConnectableElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectableElementItemProvider connectableElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ConnectableElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectableElementAdapter() {
		if (connectableElementItemProvider == null) {
			connectableElementItemProvider = new ConnectableElementItemProvider(this);
		}

		return connectableElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Connector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectorItemProvider connectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Connector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectorAdapter() {
		if (connectorItemProvider == null) {
			connectorItemProvider = new ConnectorItemProvider(this);
		}

		return connectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Container} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerItemProvider containerItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Container}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerAdapter() {
		if (containerItemProvider == null) {
			containerItemProvider = new ContainerItemProvider(this);
		}

		return containerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Contract} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContractItemProvider contractItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Contract}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContractAdapter() {
		if (contractItemProvider == null) {
			contractItemProvider = new ContractItemProvider(this);
		}

		return contractItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ContractInputMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContractInputMappingItemProvider contractInputMappingItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ContractInputMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContractInputMappingAdapter() {
		if (contractInputMappingItemProvider == null) {
			contractInputMappingItemProvider = new ContractInputMappingItemProvider(this);
		}

		return contractInputMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ContractInput} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContractInputItemProvider contractInputItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ContractInput}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContractInputAdapter() {
		if (contractInputItemProvider == null) {
			contractInputItemProvider = new ContractInputItemProvider(this);
		}

		return contractInputItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ContractConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContractConstraintItemProvider contractConstraintItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ContractConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContractConstraintAdapter() {
		if (contractConstraintItemProvider == null) {
			contractConstraintItemProvider = new ContractConstraintItemProvider(this);
		}

		return contractConstraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Connection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionItemProvider connectionItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Connection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionAdapter() {
		if (connectionItemProvider == null) {
			connectionItemProvider = new ConnectionItemProvider(this);
		}

		return connectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Correlation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CorrelationItemProvider correlationItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Correlation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCorrelationAdapter() {
		if (correlationItemProvider == null) {
			correlationItemProvider = new CorrelationItemProvider(this);
		}

		return correlationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.CorrelationAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CorrelationAssociationItemProvider correlationAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.CorrelationAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCorrelationAssociationAdapter() {
		if (correlationAssociationItemProvider == null) {
			correlationAssociationItemProvider = new CorrelationAssociationItemProvider(this);
		}

		return correlationAssociationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Data} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataItemProvider dataItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Data}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataAdapter() {
		if (dataItemProvider == null) {
			dataItemProvider = new DataItemProvider(this);
		}

		return dataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.DataAware} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataAwareItemProvider dataAwareItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.DataAware}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataAwareAdapter() {
		if (dataAwareItemProvider == null) {
			dataAwareItemProvider = new DataAwareItemProvider(this);
		}

		return dataAwareItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.DateType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateTypeItemProvider dateTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.DateType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateTypeAdapter() {
		if (dateTypeItemProvider == null) {
			dateTypeItemProvider = new DateTypeItemProvider(this);
		}

		return dateTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Document} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentItemProvider documentItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Document}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentAdapter() {
		if (documentItemProvider == null) {
			documentItemProvider = new DocumentItemProvider(this);
		}

		return documentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.DoubleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DoubleTypeItemProvider doubleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.DoubleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDoubleTypeAdapter() {
		if (doubleTypeItemProvider == null) {
			doubleTypeItemProvider = new DoubleTypeItemProvider(this);
		}

		return doubleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Event} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventItemProvider eventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Event}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventAdapter() {
		if (eventItemProvider == null) {
			eventItemProvider = new EventItemProvider(this);
		}

		return eventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.EndErrorEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndErrorEventItemProvider endErrorEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.EndErrorEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndErrorEventAdapter() {
		if (endErrorEventItemProvider == null) {
			endErrorEventItemProvider = new EndErrorEventItemProvider(this);
		}

		return endErrorEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.EndEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndEventItemProvider endEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.EndEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndEventAdapter() {
		if (endEventItemProvider == null) {
			endEventItemProvider = new EndEventItemProvider(this);
		}

		return endEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.EndMessageEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndMessageEventItemProvider endMessageEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.EndMessageEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndMessageEventAdapter() {
		if (endMessageEventItemProvider == null) {
			endMessageEventItemProvider = new EndMessageEventItemProvider(this);
		}

		return endMessageEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.EndSignalEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndSignalEventItemProvider endSignalEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.EndSignalEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndSignalEventAdapter() {
		if (endSignalEventItemProvider == null) {
			endSignalEventItemProvider = new EndSignalEventItemProvider(this);
		}

		return endSignalEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.EndTerminatedEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndTerminatedEventItemProvider endTerminatedEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.EndTerminatedEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndTerminatedEventAdapter() {
		if (endTerminatedEventItemProvider == null) {
			endTerminatedEventItemProvider = new EndTerminatedEventItemProvider(this);
		}

		return endTerminatedEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.EnumType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumTypeItemProvider enumTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.EnumType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumTypeAdapter() {
		if (enumTypeItemProvider == null) {
			enumTypeItemProvider = new EnumTypeItemProvider(this);
		}

		return enumTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.FloatType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatTypeItemProvider floatTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.FloatType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatTypeAdapter() {
		if (floatTypeItemProvider == null) {
			floatTypeItemProvider = new FloatTypeItemProvider(this);
		}

		return floatTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.FlowElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowElementItemProvider flowElementItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.FlowElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowElementAdapter() {
		if (flowElementItemProvider == null) {
			flowElementItemProvider = new FlowElementItemProvider(this);
		}

		return flowElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.FormMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormMappingItemProvider formMappingItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.FormMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormMappingAdapter() {
		if (formMappingItemProvider == null) {
			formMappingItemProvider = new FormMappingItemProvider(this);
		}

		return formMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Gateway} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GatewayItemProvider gatewayItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Gateway}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGatewayAdapter() {
		if (gatewayItemProvider == null) {
			gatewayItemProvider = new GatewayItemProvider(this);
		}

		return gatewayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.InclusiveGateway} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InclusiveGatewayItemProvider inclusiveGatewayItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.InclusiveGateway}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInclusiveGatewayAdapter() {
		if (inclusiveGatewayItemProvider == null) {
			inclusiveGatewayItemProvider = new InclusiveGatewayItemProvider(this);
		}

		return inclusiveGatewayItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.InputMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputMappingItemProvider inputMappingItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.InputMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputMappingAdapter() {
		if (inputMappingItemProvider == null) {
			inputMappingItemProvider = new InputMappingItemProvider(this);
		}

		return inputMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.IntegerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerTypeItemProvider integerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.IntegerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerTypeAdapter() {
		if (integerTypeItemProvider == null) {
			integerTypeItemProvider = new IntegerTypeItemProvider(this);
		}

		return integerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.IntermediateErrorCatchEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntermediateErrorCatchEventItemProvider intermediateErrorCatchEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.IntermediateErrorCatchEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntermediateErrorCatchEventAdapter() {
		if (intermediateErrorCatchEventItemProvider == null) {
			intermediateErrorCatchEventItemProvider = new IntermediateErrorCatchEventItemProvider(this);
		}

		return intermediateErrorCatchEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.IntermediateCatchSignalEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntermediateCatchSignalEventItemProvider intermediateCatchSignalEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.IntermediateCatchSignalEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntermediateCatchSignalEventAdapter() {
		if (intermediateCatchSignalEventItemProvider == null) {
			intermediateCatchSignalEventItemProvider = new IntermediateCatchSignalEventItemProvider(this);
		}

		return intermediateCatchSignalEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.IntermediateThrowSignalEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntermediateThrowSignalEventItemProvider intermediateThrowSignalEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.IntermediateThrowSignalEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntermediateThrowSignalEventAdapter() {
		if (intermediateThrowSignalEventItemProvider == null) {
			intermediateThrowSignalEventItemProvider = new IntermediateThrowSignalEventItemProvider(this);
		}

		return intermediateThrowSignalEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.IntermediateCatchMessageEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntermediateCatchMessageEventItemProvider intermediateCatchMessageEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.IntermediateCatchMessageEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntermediateCatchMessageEventAdapter() {
		if (intermediateCatchMessageEventItemProvider == null) {
			intermediateCatchMessageEventItemProvider = new IntermediateCatchMessageEventItemProvider(this);
		}

		return intermediateCatchMessageEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.IntermediateThrowMessageEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntermediateThrowMessageEventItemProvider intermediateThrowMessageEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.IntermediateThrowMessageEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntermediateThrowMessageEventAdapter() {
		if (intermediateThrowMessageEventItemProvider == null) {
			intermediateThrowMessageEventItemProvider = new IntermediateThrowMessageEventItemProvider(this);
		}

		return intermediateThrowMessageEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.IntermediateCatchTimerEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntermediateCatchTimerEventItemProvider intermediateCatchTimerEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.IntermediateCatchTimerEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntermediateCatchTimerEventAdapter() {
		if (intermediateCatchTimerEventItemProvider == null) {
			intermediateCatchTimerEventItemProvider = new IntermediateCatchTimerEventItemProvider(this);
		}

		return intermediateCatchTimerEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.JavaObjectData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JavaObjectDataItemProvider javaObjectDataItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.JavaObjectData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJavaObjectDataAdapter() {
		if (javaObjectDataItemProvider == null) {
			javaObjectDataItemProvider = new JavaObjectDataItemProvider(this);
		}

		return javaObjectDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.JavaType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JavaTypeItemProvider javaTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.JavaType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJavaTypeAdapter() {
		if (javaTypeItemProvider == null) {
			javaTypeItemProvider = new JavaTypeItemProvider(this);
		}

		return javaTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Lane} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LaneItemProvider laneItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Lane}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLaneAdapter() {
		if (laneItemProvider == null) {
			laneItemProvider = new LaneItemProvider(this);
		}

		return laneItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.LinkEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkEventItemProvider linkEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.LinkEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkEventAdapter() {
		if (linkEventItemProvider == null) {
			linkEventItemProvider = new LinkEventItemProvider(this);
		}

		return linkEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.LongType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LongTypeItemProvider longTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.LongType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLongTypeAdapter() {
		if (longTypeItemProvider == null) {
			longTypeItemProvider = new LongTypeItemProvider(this);
		}

		return longTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.MainProcess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MainProcessItemProvider mainProcessItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.MainProcess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMainProcessAdapter() {
		if (mainProcessItemProvider == null) {
			mainProcessItemProvider = new MainProcessItemProvider(this);
		}

		return mainProcessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Message} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageItemProvider messageItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Message}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageAdapter() {
		if (messageItemProvider == null) {
			messageItemProvider = new MessageItemProvider(this);
		}

		return messageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.MessageFlow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageFlowItemProvider messageFlowItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.MessageFlow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageFlowAdapter() {
		if (messageFlowItemProvider == null) {
			messageFlowItemProvider = new MessageFlowItemProvider(this);
		}

		return messageFlowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.MessageEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageEventItemProvider messageEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.MessageEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageEventAdapter() {
		if (messageEventItemProvider == null) {
			messageEventItemProvider = new MessageEventItemProvider(this);
		}

		return messageEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.NonInterruptingBoundaryTimerEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NonInterruptingBoundaryTimerEventItemProvider nonInterruptingBoundaryTimerEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.NonInterruptingBoundaryTimerEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNonInterruptingBoundaryTimerEventAdapter() {
		if (nonInterruptingBoundaryTimerEventItemProvider == null) {
			nonInterruptingBoundaryTimerEventItemProvider = new NonInterruptingBoundaryTimerEventItemProvider(this);
		}

		return nonInterruptingBoundaryTimerEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.OperationContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationContainerItemProvider operationContainerItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.OperationContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationContainerAdapter() {
		if (operationContainerItemProvider == null) {
			operationContainerItemProvider = new OperationContainerItemProvider(this);
		}

		return operationContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.OutputMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputMappingItemProvider outputMappingItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.OutputMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputMappingAdapter() {
		if (outputMappingItemProvider == null) {
			outputMappingItemProvider = new OutputMappingItemProvider(this);
		}

		return outputMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.PageFlow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PageFlowItemProvider pageFlowItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.PageFlow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPageFlowAdapter() {
		if (pageFlowItemProvider == null) {
			pageFlowItemProvider = new PageFlowItemProvider(this);
		}

		return pageFlowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Pool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PoolItemProvider poolItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Pool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPoolAdapter() {
		if (poolItemProvider == null) {
			poolItemProvider = new PoolItemProvider(this);
		}

		return poolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ReceiveTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReceiveTaskItemProvider receiveTaskItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ReceiveTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReceiveTaskAdapter() {
		if (receiveTaskItemProvider == null) {
			receiveTaskItemProvider = new ReceiveTaskItemProvider(this);
		}

		return receiveTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.SequenceFlow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceFlowItemProvider sequenceFlowItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.SequenceFlow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceFlowAdapter() {
		if (sequenceFlowItemProvider == null) {
			sequenceFlowItemProvider = new SequenceFlowItemProvider(this);
		}

		return sequenceFlowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.StringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringTypeItemProvider stringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.StringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringTypeAdapter() {
		if (stringTypeItemProvider == null) {
			stringTypeItemProvider = new StringTypeItemProvider(this);
		}

		return stringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ScriptTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScriptTaskItemProvider scriptTaskItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ScriptTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScriptTaskAdapter() {
		if (scriptTaskItemProvider == null) {
			scriptTaskItemProvider = new ScriptTaskItemProvider(this);
		}

		return scriptTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.SearchIndex} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SearchIndexItemProvider searchIndexItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.SearchIndex}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSearchIndexAdapter() {
		if (searchIndexItemProvider == null) {
			searchIndexItemProvider = new SearchIndexItemProvider(this);
		}

		return searchIndexItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.SendTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SendTaskItemProvider sendTaskItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.SendTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSendTaskAdapter() {
		if (sendTaskItemProvider == null) {
			sendTaskItemProvider = new SendTaskItemProvider(this);
		}

		return sendTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ServiceTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceTaskItemProvider serviceTaskItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ServiceTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceTaskAdapter() {
		if (serviceTaskItemProvider == null) {
			serviceTaskItemProvider = new ServiceTaskItemProvider(this);
		}

		return serviceTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.StartErrorEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartErrorEventItemProvider startErrorEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.StartErrorEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartErrorEventAdapter() {
		if (startErrorEventItemProvider == null) {
			startErrorEventItemProvider = new StartErrorEventItemProvider(this);
		}

		return startErrorEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.StartEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartEventItemProvider startEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.StartEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartEventAdapter() {
		if (startEventItemProvider == null) {
			startEventItemProvider = new StartEventItemProvider(this);
		}

		return startEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.StartMessageEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartMessageEventItemProvider startMessageEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.StartMessageEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartMessageEventAdapter() {
		if (startMessageEventItemProvider == null) {
			startMessageEventItemProvider = new StartMessageEventItemProvider(this);
		}

		return startMessageEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.StartSignalEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartSignalEventItemProvider startSignalEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.StartSignalEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartSignalEventAdapter() {
		if (startSignalEventItemProvider == null) {
			startSignalEventItemProvider = new StartSignalEventItemProvider(this);
		}

		return startSignalEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.StartTimerEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StartTimerEventItemProvider startTimerEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.StartTimerEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStartTimerEventAdapter() {
		if (startTimerEventItemProvider == null) {
			startTimerEventItemProvider = new StartTimerEventItemProvider(this);
		}

		return startTimerEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.SubProcessEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubProcessEventItemProvider subProcessEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.SubProcessEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubProcessEventAdapter() {
		if (subProcessEventItemProvider == null) {
			subProcessEventItemProvider = new SubProcessEventItemProvider(this);
		}

		return subProcessEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.Task} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaskItemProvider taskItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.Task}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaskAdapter() {
		if (taskItemProvider == null) {
			taskItemProvider = new TaskItemProvider(this);
		}

		return taskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.TextAnnotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextAnnotationItemProvider textAnnotationItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.TextAnnotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextAnnotationAdapter() {
		if (textAnnotationItemProvider == null) {
			textAnnotationItemProvider = new TextAnnotationItemProvider(this);
		}

		return textAnnotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.TextAnnotationAttachment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextAnnotationAttachmentItemProvider textAnnotationAttachmentItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.TextAnnotationAttachment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextAnnotationAttachmentAdapter() {
		if (textAnnotationAttachmentItemProvider == null) {
			textAnnotationAttachmentItemProvider = new TextAnnotationAttachmentItemProvider(this);
		}

		return textAnnotationAttachmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ThrowLinkEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThrowLinkEventItemProvider throwLinkEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ThrowLinkEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThrowLinkEventAdapter() {
		if (throwLinkEventItemProvider == null) {
			throwLinkEventItemProvider = new ThrowLinkEventItemProvider(this);
		}

		return throwLinkEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.ThrowMessageEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThrowMessageEventItemProvider throwMessageEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.ThrowMessageEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThrowMessageEventAdapter() {
		if (throwMessageEventItemProvider == null) {
			throwMessageEventItemProvider = new ThrowMessageEventItemProvider(this);
		}

		return throwMessageEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.TimerEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimerEventItemProvider timerEventItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.TimerEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimerEventAdapter() {
		if (timerEventItemProvider == null) {
			timerEventItemProvider = new TimerEventItemProvider(this);
		}

		return timerEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.XMLData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XMLDataItemProvider xmlDataItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.XMLData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXMLDataAdapter() {
		if (xmlDataItemProvider == null) {
			xmlDataItemProvider = new XMLDataItemProvider(this);
		}

		return xmlDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.XMLType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XMLTypeItemProvider xmlTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.XMLType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXMLTypeAdapter() {
		if (xmlTypeItemProvider == null) {
			xmlTypeItemProvider = new XMLTypeItemProvider(this);
		}

		return xmlTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.bonitasoft.studio.model.process.XORGateway} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XORGatewayItemProvider xorGatewayItemProvider;

	/**
	 * This creates an adapter for a {@link org.bonitasoft.studio.model.process.XORGateway}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXORGatewayAdapter() {
		if (xorGatewayItemProvider == null) {
			xorGatewayItemProvider = new XORGatewayItemProvider(this);
		}

		return xorGatewayItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (activityItemProvider != null) activityItemProvider.dispose();
		if (actorItemProvider != null) actorItemProvider.dispose();
		if (actorFilterItemProvider != null) actorFilterItemProvider.dispose();
		if (andGatewayItemProvider != null) andGatewayItemProvider.dispose();
		if (associationItemProvider != null) associationItemProvider.dispose();
		if (booleanTypeItemProvider != null) booleanTypeItemProvider.dispose();
		if (boundaryEventItemProvider != null) boundaryEventItemProvider.dispose();
		if (boundaryMessageEventItemProvider != null) boundaryMessageEventItemProvider.dispose();
		if (boundarySignalEventItemProvider != null) boundarySignalEventItemProvider.dispose();
		if (boundaryTimerEventItemProvider != null) boundaryTimerEventItemProvider.dispose();
		if (businessObjectDataItemProvider != null) businessObjectDataItemProvider.dispose();
		if (businessObjectTypeItemProvider != null) businessObjectTypeItemProvider.dispose();
		if (callActivityItemProvider != null) callActivityItemProvider.dispose();
		if (catchLinkEventItemProvider != null) catchLinkEventItemProvider.dispose();
		if (connectableElementItemProvider != null) connectableElementItemProvider.dispose();
		if (connectorItemProvider != null) connectorItemProvider.dispose();
		if (containerItemProvider != null) containerItemProvider.dispose();
		if (contractItemProvider != null) contractItemProvider.dispose();
		if (contractInputMappingItemProvider != null) contractInputMappingItemProvider.dispose();
		if (contractInputItemProvider != null) contractInputItemProvider.dispose();
		if (contractConstraintItemProvider != null) contractConstraintItemProvider.dispose();
		if (connectionItemProvider != null) connectionItemProvider.dispose();
		if (correlationItemProvider != null) correlationItemProvider.dispose();
		if (correlationAssociationItemProvider != null) correlationAssociationItemProvider.dispose();
		if (dataItemProvider != null) dataItemProvider.dispose();
		if (dataAwareItemProvider != null) dataAwareItemProvider.dispose();
		if (dateTypeItemProvider != null) dateTypeItemProvider.dispose();
		if (documentItemProvider != null) documentItemProvider.dispose();
		if (doubleTypeItemProvider != null) doubleTypeItemProvider.dispose();
		if (eventItemProvider != null) eventItemProvider.dispose();
		if (endErrorEventItemProvider != null) endErrorEventItemProvider.dispose();
		if (endEventItemProvider != null) endEventItemProvider.dispose();
		if (endMessageEventItemProvider != null) endMessageEventItemProvider.dispose();
		if (endSignalEventItemProvider != null) endSignalEventItemProvider.dispose();
		if (endTerminatedEventItemProvider != null) endTerminatedEventItemProvider.dispose();
		if (enumTypeItemProvider != null) enumTypeItemProvider.dispose();
		if (floatTypeItemProvider != null) floatTypeItemProvider.dispose();
		if (flowElementItemProvider != null) flowElementItemProvider.dispose();
		if (formMappingItemProvider != null) formMappingItemProvider.dispose();
		if (gatewayItemProvider != null) gatewayItemProvider.dispose();
		if (inclusiveGatewayItemProvider != null) inclusiveGatewayItemProvider.dispose();
		if (inputMappingItemProvider != null) inputMappingItemProvider.dispose();
		if (integerTypeItemProvider != null) integerTypeItemProvider.dispose();
		if (intermediateErrorCatchEventItemProvider != null) intermediateErrorCatchEventItemProvider.dispose();
		if (intermediateCatchSignalEventItemProvider != null) intermediateCatchSignalEventItemProvider.dispose();
		if (intermediateThrowSignalEventItemProvider != null) intermediateThrowSignalEventItemProvider.dispose();
		if (intermediateCatchMessageEventItemProvider != null) intermediateCatchMessageEventItemProvider.dispose();
		if (intermediateThrowMessageEventItemProvider != null) intermediateThrowMessageEventItemProvider.dispose();
		if (intermediateCatchTimerEventItemProvider != null) intermediateCatchTimerEventItemProvider.dispose();
		if (javaObjectDataItemProvider != null) javaObjectDataItemProvider.dispose();
		if (javaTypeItemProvider != null) javaTypeItemProvider.dispose();
		if (laneItemProvider != null) laneItemProvider.dispose();
		if (linkEventItemProvider != null) linkEventItemProvider.dispose();
		if (longTypeItemProvider != null) longTypeItemProvider.dispose();
		if (mainProcessItemProvider != null) mainProcessItemProvider.dispose();
		if (messageItemProvider != null) messageItemProvider.dispose();
		if (messageFlowItemProvider != null) messageFlowItemProvider.dispose();
		if (messageEventItemProvider != null) messageEventItemProvider.dispose();
		if (nonInterruptingBoundaryTimerEventItemProvider != null) nonInterruptingBoundaryTimerEventItemProvider.dispose();
		if (operationContainerItemProvider != null) operationContainerItemProvider.dispose();
		if (outputMappingItemProvider != null) outputMappingItemProvider.dispose();
		if (pageFlowItemProvider != null) pageFlowItemProvider.dispose();
		if (poolItemProvider != null) poolItemProvider.dispose();
		if (receiveTaskItemProvider != null) receiveTaskItemProvider.dispose();
		if (sequenceFlowItemProvider != null) sequenceFlowItemProvider.dispose();
		if (stringTypeItemProvider != null) stringTypeItemProvider.dispose();
		if (scriptTaskItemProvider != null) scriptTaskItemProvider.dispose();
		if (searchIndexItemProvider != null) searchIndexItemProvider.dispose();
		if (sendTaskItemProvider != null) sendTaskItemProvider.dispose();
		if (serviceTaskItemProvider != null) serviceTaskItemProvider.dispose();
		if (startErrorEventItemProvider != null) startErrorEventItemProvider.dispose();
		if (startEventItemProvider != null) startEventItemProvider.dispose();
		if (startMessageEventItemProvider != null) startMessageEventItemProvider.dispose();
		if (startSignalEventItemProvider != null) startSignalEventItemProvider.dispose();
		if (startTimerEventItemProvider != null) startTimerEventItemProvider.dispose();
		if (subProcessEventItemProvider != null) subProcessEventItemProvider.dispose();
		if (taskItemProvider != null) taskItemProvider.dispose();
		if (textAnnotationItemProvider != null) textAnnotationItemProvider.dispose();
		if (textAnnotationAttachmentItemProvider != null) textAnnotationAttachmentItemProvider.dispose();
		if (throwLinkEventItemProvider != null) throwLinkEventItemProvider.dispose();
		if (throwMessageEventItemProvider != null) throwMessageEventItemProvider.dispose();
		if (timerEventItemProvider != null) timerEventItemProvider.dispose();
		if (xmlDataItemProvider != null) xmlDataItemProvider.dispose();
		if (xmlTypeItemProvider != null) xmlTypeItemProvider.dispose();
		if (xorGatewayItemProvider != null) xorGatewayItemProvider.dispose();
	}

}

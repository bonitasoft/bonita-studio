testButtonLabel=Avaliar
functionDocTitle=Documenta\u00e7\u00e3o
functionTitle=Fun\u00e7\u00f5es
categoriesTitle=Categorias
noProcessVariableAvailable=Nenhuma vari\u00e1vel dispon\u00edvel
selectData=Selecionar...
groovyDocumentationLink=In\u00edcio r\u00e1pido com Groovy
browseJava=Percorrer o seu objeto Java
scriptEvaluation=Avalia\u00e7\u00e3o de script...
returnType=Tipo de retorno
add=Adicionar...
remove=Remover
automaticResolution=Resolu\u00e7\u00e3o autom\u00e1tica de depend\u00eancias
unknownVariableLabel=Vari\u00e1veis desconhecidas
processVariableLabel=Vari\u00e1veis de processo
groovyUnresolved=n\u00e3o pode ser resolvido. Pode levar a erros de tempo de execu\u00e7\u00e3o.
evaluationResults=Resultados da avalia\u00e7\u00e3o
testGroovyScriptDialogDescription=Para cada dado abaixo um valor \u00e9 necess\u00e1rio para avaliar o script groovy.
nameHelp=O nome do script corresponde \u00e0 classe de Groovy gerada que o cont\u00eam. consulte a documenta\u00e7\u00e3o Groovy para obter mais informa\u00e7\u00f5es.
warningAssigningAVariableWithSameNameAsProcessVariable={0} \u00e9 uma vari\u00e1vel de processo e n\u00e3o deve ser usada em uma instru\u00e7\u00e3o de declara\u00e7\u00e3o.
maxScriptLengthTitle=Tamanho m\u00e1ximo do script
maxScriptLength=O tamanho m\u00e1xima de um groovy script no Bonita Studio \u00e9 de 64 kilobytes.\nVoc\u00ea atingiu esse limite, os caracteres adicionais n\u00e3o ser\u00e3o salvos.\nSugerimos que voc\u00ea divida sua l\u00f3gica de neg\u00f3cios em v\u00e1rios scripts.
onlyReadOnly=\u26a0 A API do Bonita deve ser usada somente para <a>chamadas somente de leitura</a> em scripts grrovy.
createNewGroovyFile=Criar um novo arquivo Groovy
open=Abrir
openExistingGroovyScript=Abrir scripts Groovy existentes
openExistingGroovyScriptDescription=Abra scripts Groovy existentes e edite-os com um editor Groovy.
deleteExistingGroovyScript=Excluir scripts Groovy existentes
deleteExistingGroovyScriptDescription=Excluir scripts Groovy existentes do seu reposit\u00f3rio local.
search=Search
noDescription=No description
codeTemplates=Code Templates
usersTemplates=Bonita Users
userDefined=User Defined
businessQueries=Business Queries
documents=Documents
stepVariables=Step Variables
processVariables=Process Variables
businessVariables=Business Variables
executionContext=Execution Context
parameterCategoryDescription=Parameters are defined at process level and can be valued for a given environment.
contractInputCategoryDescription=Contract input are the required input defined on a process or a human task needed for their execution.
connectorOutputCategoryDescription=Defined in the connector definition, connector output are data produced by a connector execution.
stepVariablesCategoryDescription=Variables defined at step level. Their scope is limited this step.
processVariablesCategoryDescription=Variables defined at process level. They have a process scope and can be used in all the expressions of the process. 
businessVariablesCategoryDescription=Variables defined at process level. They have a process scope and can be used in all the expressions of the process. Whereas the process variables, business variables are stored in their own database and can be shared across multiple processes.
businessQueriesCategoryDescription=Each Business Object defined in the Business Data Model can be queried using a generated Data Access Object (DAO). Default queries are generated for all Business Objects, you can also defined custom queries in the BDM editor.
documentsCategoryDescription=Documents are defined at process level, they can be used to store binary data or as a redirection to an external document store.
executionContextCategoryDescription=The execution context contains variables that are relevant to the current state of the system when evaluating this expression.
codeTemplatesCategoryDescription=Code templates are predefined code blocks that provide a quick assist to develop expressions.
userDefinedCategoryDescription=User defined Groovy functions
usersTemplatesCategoryDescription=Bonita users code templates
automaticResolutionHint=By default, all the expression dependencies are resolved automatically.\nIn case the automatic resolution doesn't complete successfully,\nyou can uncheck this property and add the missing dependencies manually.
<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.bonitasoft.studio</groupId>
        <artifactId>studio</artifactId>
        <version>7.3.0-SNAPSHOT</version>
    </parent>

    <groupId>org.bonitasoft.studio</groupId>
    <artifactId>all-in-one</artifactId>
    <packaging>eclipse-repository</packaging>

    <dependencies>
        <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>1.0b3</version>
        </dependency>
    </dependencies>

    <properties>
        <product.short.name>BonitaBPMCommunity</product.short.name>
        <repositoryId>studio-repository</repositoryId>
        <productId>org.bonitasoft.studio.product</productId>
        <antRunner>-application org.eclipse.ant.core.antRunner</antRunner>
        <p2BuildFile>-buildfile p2AllInOne.xml -clean -noSplash -consoleLog</p2BuildFile>
        <root.dir.arg>-Droot.dir=${project.build.directory}/${product.short.name}-${project.version}</root.dir.arg>
        <argLine>${antRunner} ${p2BuildFile} ${root.dir.arg}</argLine>
    </properties>


    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.tycho</groupId>
                    <artifactId>target-platform-configuration</artifactId>
                    <version>${tychoVersion}</version>
                    <executions>
                        <execution>
                            <id>default-target-platform</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.tycho</groupId>
                    <artifactId>tycho-p2-publisher-plugin</artifactId>
                    <version>${tychoVersion}</version>
                    <executions>
                        <execution>
                            <id>default-publish-products</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>default-publish-categories</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>default-attach-artifacts</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.tycho</groupId>
                    <artifactId>tycho-p2-repository-plugin</artifactId>
                    <version>${tychoVersion}</version>
                    <executions>
                        <execution>
                            <id>default-publish-products</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>default-assemble-repository</id>
                            <phase>none</phase>
                        </execution>
                        <execution>
                            <id>default-archive-repository</id>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.bonitasoft.maven</groupId>
                <artifactId>image-overlay-plugin</artifactId>
                <executions>
                    <execution>
                        <id>splashVersion</id>
                        <configuration>
                            <baseImgPath>${basedir}/installer/images/splash_without_version.png</baseImgPath>
                            <outputImagePath>${basedir}/installer/images/splash.png</outputImagePath>
                            <outputImageFormat>png</outputImageFormat>
                            <xLocation>88</xLocation>
                            <yLocation>128</yLocation>
                            <fontSize>22</fontSize>
                            <color>#0B4361</color>
                            <versionLabel>7.3.0</versionLabel>
                        </configuration>
                        <goals>
                            <goal>create-image</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>target-platform-configuration</artifactId>
                <executions>
                    <execution>
                        <id>target-platform</id>
                        <goals>
                            <goal>target-platform</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-p2-publisher-plugin</artifactId>
                <executions>
                    <execution>
                        <id>publish</id>
                        <goals>
                            <goal>publish-products</goal>
                            <goal>publish-categories</goal>
                            <goal>attach-artifacts</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-p2-repository-plugin</artifactId>
                <configuration>
                    <includeAllDependencies>true</includeAllDependencies>
                    <finalName>${repositoryId}-${project.version}</finalName>
                </configuration>
                <executions>
                    <execution>
                        <id>build-repository</id>
                        <goals>
                            <goal>assemble-repository</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-p2-director-plugin</artifactId>
                <version>${tychoVersion}</version>
                <configuration>
                    <formats>
                        <macosx>tar.gz</macosx>
                        <linux>tar.gz</linux>
                        <win>zip</win>
                    </formats>
                </configuration>
                <executions>
                    <execution>
                        <id>materialize-products</id>
                        <goals>
                            <goal>materialize-products</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- all-in-one assembly with all platforms -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-directory-assembly</id>
                        <phase>prepare-package</phase>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptor>${basedir}/assembly-descriptor.xml</descriptor>
                            <finalName>${product.short.name}-${project.version}</finalName>
                        </configuration>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>make-zip-assembly</id>
                        <phase>package</phase>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptor>${basedir}/assembly-zip-descriptor.xml</descriptor>
                            <finalName>${product.short.name}-${project.version}</finalName>
                        </configuration>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- Create a proper bundles.info for all-in-one -->
            <plugin>
                <groupId>org.eclipse.tycho.extras</groupId>
                <artifactId>tycho-eclipserun-plugin</artifactId>
                <configuration>
                    <appArgLine>${os-jvm-flags} ${argLine}/</appArgLine>
                    <argLine>-Xmx512m -Xms256m -XX:MaxPermSize=512m</argLine>
                    <repositories>
                        <repository>
                            <id>BonitaBPM P2 Repository</id>
                            <layout>p2</layout>
                            <url>${p2MirrorUrl}</url>
                        </repository>
                        <repository>
                            <id>Additional Build Dependencies P2 Repository</id>
                            <layout>p2</layout>
                            <url>${project.baseUri}/repository/</url>
                        </repository>
                    </repositories>
                    <dependencies>
                        <dependency>
                            <artifactId>org.bonitasoft.studio_antTasks</artifactId>
                            <type>eclipse-plugin</type>
                        </dependency>
                        <dependency>
                            <artifactId>org.apache.ant</artifactId>
                            <type>eclipse-plugin</type>
                        </dependency>
                        <dependency>
                            <artifactId>org.eclipse.equinox.ds</artifactId>
                            <type>eclipse-plugin</type>
                        </dependency>
                    </dependencies>
                </configuration>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>eclipse-run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>buildInstaller</id>
            <activation>
                <property>
                    <name>BITROCK_HOME</name>
                </property>
            </activation>
            <properties>
                <if.task>net.sf.antcontrib.logic.IfTask</if.task>
                <jre.url>http://repositories.rd.lan/tools/studio-tools</jre.url>
                <jre.winx86.url>jre1.7.0_55-windows</jre.winx86.url>
                <jre.winx86.x64.url>jre1.7.0_55-windows-x64</jre.winx86.x64.url>
                <jre.linuxx86.url>jre1.7.0_55-linux</jre.linuxx86.url>
                <jre.linuxx86.x64.url>jre1.7.0_55-linux-x64</jre.linuxx86.x64.url>
                <jre.osx.url>jre-8u45-macosx-x64</jre.osx.url>
            </properties>
            <build>
                <plugins>
                    <!-- Build installers for each platform -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>linux-x86</id>
                                <phase>package</phase>
                                <configuration>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>${basedir}/installer/installer_project_linux_x86.xml</argument>
                                        <argument>linux</argument>
                                    </arguments>
                                </configuration>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>linux-x86_64</id>
                                <phase>package</phase>
                                <configuration>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>${basedir}/installer/installer_project_linux_x86_64.xml</argument>
                                        <argument>linux-x64</argument>
                                    </arguments>
                                </configuration>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>macosx-x86_64</id>
                                <phase>package</phase>
                                <configuration>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>${basedir}/installer/installer_project_macosx_x86_64.xml</argument>
                                        <argument>osx</argument>
                                    </arguments>
                                </configuration>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>win-x86</id>
                                <phase>package</phase>
                                <configuration>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>${basedir}/installer/installer_project_win_x86.xml</argument>
                                        <argument>windows</argument>
                                    </arguments>
                                </configuration>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>win-x86_64</id>
                                <phase>package</phase>
                                <configuration>
                                    <arguments>
                                        <argument>build</argument>
                                        <argument>${basedir}/installer/installer_project_win_x86_64.xml</argument>
                                        <argument>windows</argument>
                                    </arguments>
                                </configuration>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>${BITROCK_HOME}/bin/builder</executable>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>linux x86 installer file</id>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <property name="studio.dir" value="${project.build.directory}/products/${productId}/linux/gtk/x86" />
                                        <property name="bitrock.install" value="${project.build.directory}/installers" />
                                        <property name="os_arch" value="32" />
                                        <property file="installer/installer.properties" />
                                        <property name="installer.name" value="${product.short.name}-${product.version}-x86.run" />
                                        <property name="updated.project.file" value="${basedir}/installer/installer_project_linux_x86.xml" />
                                        <ant antfile="createInstallerProject.xml" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>linux x86_64 installer file</id>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <property name="studio.dir" value="${project.build.directory}/products/${productId}/linux/gtk/x86_64" />
                                        <property name="bitrock.install" value="${project.build.directory}/installers" />
                                        <property name="os_arch" value="64" />
                                        <property file="installer/installer.properties" />
                                        <property name="installer.name" value="${product.short.name}-${product.version}-x86_64.run" />
                                        <property name="updated.project.file" value="${basedir}/installer/installer_project_linux_x86_64.xml" />
                                        <ant antfile="createInstallerProject.xml" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>macosx x86_64 installer file</id>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <property name="studio.dir" value="${project.build.directory}/products/${productId}/macosx/cocoa/x86_64" />
                                        <property name="bitrock.install" value="${project.build.directory}/installers" />
                                        <property name="os_arch" value="64" />
                                        <property file="installer/installer.properties" />
                                        <property name="installer.name" value="${product.short.name}-${product.version}-x86_64" />
                                        <property name="updated.project.file" value="${basedir}/installer/installer_project_macosx_x86_64.xml" />
                                        <ant antfile="createInstallerProject.xml" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>windows x86 installer file</id>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <property name="studio.dir" value="${project.build.directory}/products/${productId}/win32/win32/x86" />
                                        <property name="bitrock.install" value="${project.build.directory}/installers" />
                                        <property name="os_arch" value="32" />
                                        <property file="installer/installer.properties" />
                                        <property name="installer.name" value="${product.short.name}-${product.version}-x86.exe" />
                                        <property name="updated.project.file" value="${basedir}/installer/installer_project_win_x86.xml" />
                                        <ant antfile="createInstallerProject.xml" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>windows x86_64 installer file</id>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <property name="studio.dir" value="${project.build.directory}/products/${productId}/win32/win32/x86_64" />
                                        <property name="bitrock.install" value="${project.build.directory}/installers" />
                                        <property name="os_arch" value="64" />
                                        <property file="installer/installer.properties" />
                                        <property name="installer.name" value="${product.short.name}-${product.version}-x86_64.exe" />
                                        <property name="updated.project.file" value="${basedir}/installer/installer_project_win_x86_64.xml" />
                                        <ant antfile="createInstallerProject.xml" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>jre-win-x86</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <taskdef name="if" classname="${if.task}" classpathref="maven.runtime.classpath" />
                                        <available property="jre.present" file="${user.home}/${jre.winx86.url}" />
                                        <if>
                                            <not>
                                                <isset property="jre.present" />
                                            </not>
                                            <then>
                                                <get src="${jre.url}/${jre.winx86.url}.zip" dest="${user.home}" verbose="true" />
                                                <unzip src="${user.home}/${jre.winx86.url}.zip" dest="${user.home}" />

                                                <delete file="${user.home}/${jre.winx86.url}.zip" />
                                            </then>
                                        </if>
                                        <copy todir="${project.build.directory}/products/${productId}/win32/win32/x86/jre">
                                            <fileset dir="${user.home}/${jre.winx86.url}/jre" />
                                        </copy>
                                    </tasks>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jre-win-x86-x64</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <taskdef name="if" classname="${if.task}" classpathref="maven.runtime.classpath" />
                                        <available property="jre.present" file="${user.home}/${jre.winx86.x64.url}" />
                                        <if>
                                            <not>
                                                <isset property="jre.present" />
                                            </not>
                                            <then>
                                                <get src="${jre.url}/${jre.winx86.x64.url}.zip" dest="${user.home}" verbose="true" />
                                                <unzip src="${user.home}/${jre.winx86.x64.url}.zip" dest="${user.home}" />

                                                <delete file="${user.home}/${jre.winx86.x64.url}.zip" />
                                            </then>
                                        </if>
                                        <copy todir="${project.build.directory}/products/${productId}/win32/win32/x86_64/jre">
                                            <fileset dir="${user.home}/${jre.winx86.x64.url}/jre" />
                                        </copy>
                                    </tasks>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jre-linux-x86</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <taskdef name="if" classname="${if.task}" classpathref="maven.runtime.classpath" />
                                        <available property="jre.present" file="${user.home}/${jre.linuxx86.url}" />
                                        <if>
                                            <not>
                                                <isset property="jre.present" />
                                            </not>
                                            <then>
                                                <get src="${jre.url}/${jre.linuxx86.url}.zip" dest="${user.home}" />
                                                <unzip src="${user.home}/${jre.linuxx86.url}.zip" dest="${user.home}" />

                                                <delete file="${user.home}/${jre.linuxx86.url}.zip" />
                                            </then>
                                        </if>
                                        <copy todir="${project.build.directory}/products/${productId}/linux/gtk/x86/jre">
                                            <fileset dir="${user.home}/${jre.linuxx86.url}/jre" />
                                        </copy>
                                    </tasks>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jre-linux-x86-64</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <taskdef name="if" classname="${if.task}" classpathref="maven.runtime.classpath" />
                                        <available property="jre.present" file="${user.home}/${jre.linuxx86.x64.url}" />
                                        <if>
                                            <not>
                                                <isset property="jre.present" />
                                            </not>
                                            <then>
                                                <get src="${jre.url}/${jre.linuxx86.x64.url}.zip" dest="${user.home}" />
                                                <unzip src="${user.home}/${jre.linuxx86.x64.url}.zip" dest="${user.home}" />

                                                <delete file="${user.home}/${jre.linuxx86.x64.url}.zip" />
                                            </then>
                                        </if>
                                        <copy todir="${project.build.directory}/products/${productId}/linux/gtk/x86_64/jre">
                                            <fileset dir="${user.home}/${jre.linuxx86.x64.url}/jre" />
                                        </copy>
                                    </tasks>
                                </configuration>
                            </execution>
                            <execution>
                                <id>jre-osx-x86-x64</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <get src="${jre.url}/${jre.osx.url}.gz" dest="${project.build.directory}/products/${productId}/macosx/cocoa/x86_64/${jre.osx.url}.gz" />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
